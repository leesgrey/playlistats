{"version":3,"sources":["Calls.js","Stats.js","charts/ModeDoughnut.js","charts/TimeSigDoughnut.js","charts/KeyDoughnut.js","charts/CustomGraph.js","charts/GenreDoughnut.js","StatsOutput.js","PlaylistSidebar.js","hash.js","App.js","serviceWorker.js","index.js"],"names":["getPlaylists","token","callback","pagLink","axios","get","PAGE_SIZE","headers","then","res","data","items","previous","next","catch","error","console","iterate","stats","track_objects","length","mostPopular","mostPopularArtist","leastPopular","leastPopularArtist","major","minor","popularityTotal","mostPopularNum","leastPopularNum","valence","duration","timeSigs","keys","track_features","audio_features","forEach","track","push","time_signature","duration_ms","mode","key","toString","item","popularity","name","artists","avgPopularity","Math","floor","avgDurationMin","round","avgDurationSec","avgValence","toFixed","Set","sigCount","processArray","uniqueKeys","sort","a","b","parseInt","slice","keyCount","genres","rawArray","unique","filter","x","ModeDoughnut","props","state","labels","datasets","backgroundColor","getState","bind","this","prevProps","setState","options","legend","position","fontColor","Component","COLORS","labelColors","4","3","1","2","5","6","TimeSigDoughnut","Object","values","getColors","colors","sig","random","KEYNAMES","KeyDoughnut","map","getModeColors","axisRanges","suggestedMin","suggestedMax","CustomGraph","customX","idx","y","customY","label","scales","xAxes","ticks","xLabel","scaleLabel","display","labelString","yAxes","yLabel","elements","point","borderColor","line","showLine","tooltips","callbacks","context","index","GenreDoughnut","StatsOutput","startup","collapseCustom","storeTrackObjects","storeTrackFeatures","storeStats","storeGenres","getModeString","getGenreString","getTimeSigString","getCustomTitle","playlistId","bleh","tracks","objects","list","trackObjects","result","id","getTrackString","params","ids","calls","features","t","artist","artistEndpoint","href","newGenres","genre","toUpperCase","className","getKeyString","hidden","style","margin","width","marginBottom","value","onChange","e","target","i","PlaylistSidebar","selected","no_data","handleClick","onPrevious","onNext","pageNum","onClick","Array","from","playlists","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","scopes","App","setPlaylists","_token","access_token","prevState","join","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6d0a9c75.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { PAGE_SIZE } from './App.js';\r\n\r\nexport function getPlaylists(token, callback, pagLink) {\r\n  axios.get(pagLink || `https://api.spotify.com/v1/me/playlists?limit=${PAGE_SIZE}`, {\r\n    headers: {\r\n      'Authorization': 'Bearer ' + token\r\n    }\r\n  })\r\n  .then((res) => {\r\n    callback(res.data.items, res.data.previous, res.data.next)\r\n  })\r\n  .catch((error) => {\r\n    console.error(error);\r\n  })\r\n}\r\n\r\nexport function getObjects(token, playlistId, callback) {\r\n  if (playlistId){\r\n    axios.get('https://api.spotify.com/v1/playlists/' + playlistId + '/tracks', {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      callback(res.data)\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    })\r\n  }\r\n  else {\r\n    axios.get('https://api.spotify.com/v1/me/player/recently-played', {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      callback(res.data)\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    })\r\n  }\r\n}\r\n\r\nfunction getTrackString(trackObjects) {\r\n  let result = \"\";\r\n  trackObjects.items.forEach(function(track) {\r\n    result += track.track.id + \",\"\r\n  })\r\n  return result;\r\n}\r\n\r\nexport function getFeatures(token, objects, callback) {\r\n  let list = getTrackString(objects);\r\n\r\n  axios.get('https://api.spotify.com/v1/audio-features', {\r\n    headers: {\r\n      'Authorization': 'Bearer ' + token\r\n    },\r\n    params: {\r\n      ids: list\r\n    }\r\n  })\r\n  .then((res) => {\r\n    callback(res.data)\r\n  })\r\n  .catch((error) => {\r\n    console.error(error)\r\n  })\r\n}\r\n\r\n\r\nexport function getArtistGenres(token, artistEndpoint, callback) {\r\n  axios.get(artistEndpoint, {\r\n    headers: {\r\n      'Authorization': 'Bearer ' + token\r\n    }\r\n  })\r\n  .then((res) => {\r\n    callback(...res.data.genres)\r\n  })\r\n  .catch((error) => {\r\n    console.error(error)\r\n  })\r\n}","export function iterate(stats){\r\n  if (!stats.track_objects.items.length) {\r\n    return null;\r\n  }\r\n\r\n  let major = 0;\r\n  let minor = 0;\r\n  let popularityTotal = 0;\r\n  let mostPopular;\r\n  let mostPopularArtist;\r\n  let mostPopularNum = -1;\r\n  let leastPopular;\r\n  let leastPopularArtist;\r\n  let leastPopularNum = 101;\r\n  let valence = 0;\r\n  let duration = 0;\r\n  let timeSigs = []\r\n  let keys = []\r\n\r\n  stats.track_features.audio_features.forEach(function(track){\r\n    // time sig\r\n    timeSigs.push(track.time_signature)\r\n\r\n    // duration\r\n    duration += track.duration_ms\r\n\r\n    // valence\r\n    valence += track.valence\r\n\r\n    // key + mode tracking\r\n    if (track.mode){\r\n      keys.push(track.key.toString() + \"+\")\r\n      major++;\r\n    }\r\n    else {\r\n      keys.push(track.key.toString() + \"-\")\r\n      minor++;\r\n    }\r\n  })\r\n\r\n  stats.track_objects.items.forEach(function(item){\r\n    if (mostPopularNum < item.track.popularity) {\r\n      mostPopularNum = item.track.popularity\r\n      mostPopular = item.track.name\r\n      mostPopularArtist = item.track.artists[0].name\r\n    }\r\n\r\n    if (leastPopularNum > item.track.popularity) {\r\n      leastPopularNum = item.track.popularity\r\n      leastPopular = item.track.name\r\n      leastPopularArtist = item.track.artists[0].name\r\n    }\r\n    popularityTotal += item.track.popularity\r\n  })\r\n\r\n  let data = {\r\n    major: major,\r\n    minor: minor,\r\n    avgPopularity: Math.floor(popularityTotal / stats.track_features.audio_features.length),\r\n    mostPopular: mostPopular,\r\n    mostPopularArtist: mostPopularArtist,\r\n    leastPopular: leastPopular,\r\n    leastPopularArtist: leastPopularArtist,\r\n    avgDurationMin: Math.round(((duration / stats.track_features.audio_features.length) / 60000)),\r\n    avgDurationSec: Math.round((((duration / stats.track_features.audio_features.length) / 60000) % 1) * 60),\r\n    avgValence: (valence / stats.track_features.audio_features.length).toFixed(3),\r\n    timeSigs: [...new Set(timeSigs)],\r\n    sigCount: processArray(timeSigs),\r\n    uniqueKeys: [...new Set(keys.sort(function(a, b){return parseInt(a.slice(0, -1)) - parseInt(b.slice(0, -1))}))],\r\n    keyCount: processArray(keys),\r\n    genres: processArray(stats.genres)\r\n  }\r\n  return data\r\n}\r\n\r\nfunction processArray(rawArray) {\r\n  let unique = [...new Set(rawArray)]\r\n  let keyCount = {}\r\n  unique.forEach(function(key){\r\n    keyCount[key] = rawArray.filter(x => x === key).length;\r\n  })\r\n  return keyCount;\r\n}\r\n","import { Doughnut } from 'react-chartjs-2';\r\nimport React, { Component } from \"react\";\r\n\r\nclass ModeDoughnut extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      labels: ['major', 'minor'],\r\n      datasets: [{\r\n        data: [this.props.major, this.props.minor],\r\n        backgroundColor: ['#FF6384', '#36A2EB']\r\n      }]\r\n    }\r\n    this.getState = this.getState.bind(this);\r\n  }\r\n\r\n  getState(){\r\n    return({\r\n      labels: ['major', 'minor'],\r\n      datasets: [{\r\n        data: [this.props.major, this.props.minor],\r\n        backgroundColor: ['#FF6384', '#36A2EB']\r\n      }]\r\n    })\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps){\r\n      this.setState(this.getState())\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Doughnut data={this.state} key={this.props.minor} options={{ legend: { position: 'right', labels: { fontColor: '#ece6e1' }}}} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModeDoughnut;\r\n","import { Doughnut } from 'react-chartjs-2';\r\nimport React, { Component } from \"react\";\r\n\r\nconst COLORS = ['#405BD5', '#6F40D5', '#BA40D5', '#D540A5', '#D5405B', '#D56F40']\r\n\r\nlet labelColors = {4: COLORS[0],\r\n                   3: COLORS[1],\r\n                   1: COLORS[2],\r\n                   2: COLORS[3],\r\n                   5: COLORS[4],\r\n                   6: COLORS[5]}\r\n\r\nclass TimeSigDoughnut extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      labels: Object.keys(this.props.sigCount),\r\n      datasets: [{\r\n        data: Object.values(this.props.sigCount),\r\n        backgroundColor: this.getColors(Object.keys(this.props.sigCount))\r\n      }]\r\n    }\r\n    this.getState = this.getState.bind(this);\r\n    this.getColors = this.getColors.bind(this)\r\n  }\r\n\r\n  getState(){\r\n    return({\r\n      labels: Object.keys(this.props.sigCount),\r\n      datasets: [{\r\n        data: Object.values(this.props.sigCount),\r\n        backgroundColor: this.getColors(Object.keys(this.props.sigCount))\r\n      }]\r\n    })\r\n  }\r\n\r\n  getColors(labels){\r\n    let colors = []\r\n    labels.forEach(function(sig){\r\n      if (labelColors[sig]){\r\n        colors.push(labelColors[sig])\r\n      }\r\n      else {\r\n        colors.push('rgba(' + Math.floor(Math.random() * 255).toString() + ', ' + Math.floor(Math.random() * 255).toString() + ', ' + Math.floor(Math.random() * 255).toString() + ')')\r\n      }\r\n    })\r\n    return colors;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps){\r\n      this.setState(this.getState())\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Doughnut data={this.state} key={this.props} options={{ legend: { position: 'right', labels: { fontColor: '#ece6e1' }}}} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeSigDoughnut;\r\n","import { Doughnut } from 'react-chartjs-2';\r\nimport React, { Component } from \"react\";\r\n\r\nexport const labelColors = {\"0+\": \"#f9ddab\",\r\n                   \"0-\": \"#FCF0DB\",\r\n                   \"2+\": \"#f9a706\",\r\n                   \"2-\": \"#FAB938\",\r\n                   \"1+\": \"#ff6704\",\r\n                   \"1-\": \"#FF8637\",\r\n                   \"3+\": \"#e7062e\",\r\n                   \"3-\": \"#F9274C\",\r\n                   \"5+\": \"#a2217e\",\r\n                   \"5-\": \"#CC2A9F\",\r\n                   \"4+\": \"#511296\",\r\n                   \"4-\": \"#6A17C4\",\r\n                   \"6+\": \"#020759\",\r\n                   \"6-\": \"#030B8B\",\r\n                   \"8+\": \"#114fc6\",\r\n                   \"8-\": \"#1E65EC\",\r\n                   \"7+\": \"#038c5e\",\r\n                   \"7-\": \"#04BE80\",\r\n                   \"9+\": \"#7fc24f\",\r\n                   \"9-\": \"#9BCF75\",\r\n                   \"11+\": \"#1b998b\",\r\n                   \"11-\": \"#23C4B2\",\r\n                   \"10+\": \"#9fa713\",\r\n                   \"10-\": \"#CBD518\",\r\n}\r\n\r\nexport const KEYNAMES = {\"0+\": \"C major\",\r\n                  \"0-\": \"C minor\",\r\n                  \"1+\": \"C♯/D♭ major\",\r\n                  \"1-\": \"C♯/D♭ minor\",\r\n                  \"2+\": \"D major\",\r\n                  \"2-\": \"D minor\",\r\n                  \"3+\": \"D♯/E♭ major\",\r\n                  \"3-\": \"D♯/E♭ minor\",\r\n                  \"4+\": \"E major\",\r\n                  \"4-\": \"E minor\",\r\n                  \"5+\": \"F major\",\r\n                  \"5-\": \"F minor\",\r\n                  \"6+\": \"F♯/G♭ major\",\r\n                  \"6-\": \"F♯/G♭ minor\",\r\n                  \"7+\": \"G major\",\r\n                  \"7-\": \"G minor\",\r\n                  \"8+\": \"G♯/A♭ major\",\r\n                  \"8-\": \"G♯/A♭ minor\",\r\n                  \"9+\": \"A major\",\r\n                  \"9-\": \"A minor\",\r\n                  \"10+\": \"A♯/B♭ major\",\r\n                  \"10-\": \"A♯/B♭ minor\",\r\n                  \"11+\": \"B major\",\r\n                  \"11-\": \"B minor\",\r\n}\r\n\r\nclass KeyDoughnut extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      labels: (Object.keys(this.props.data).map(x => KEYNAMES[x])),\r\n      datasets: [{\r\n        data: Object.values(this.props.data),\r\n        backgroundColor: this.getColors(Object.keys(this.props.data))\r\n      }]\r\n    }\r\n    this.getState = this.getState.bind(this);\r\n    this.getColors = this.getColors.bind(this)\r\n    this.getModeColors = this.getModeColors.bind(this)\r\n  }\r\n\r\n  getState(){\r\n    return({\r\n      labels: (Object.keys(this.props.data).map(x => KEYNAMES[x])),\r\n      datasets: [{\r\n        data: Object.values(this.props.data),\r\n        backgroundColor: this.getColors(Object.keys(this.props.data))\r\n      }]\r\n    })\r\n  }\r\n\r\n  getColors(labels){\r\n    let colors = []\r\n    labels.forEach(function(sig){\r\n      colors.push(labelColors[sig])\r\n    })\r\n    return colors;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps){\r\n      this.setState(this.getState())\r\n    }\r\n  }\r\n\r\n  getModeColors(labels){\r\n    let colors = []\r\n    labels.forEach(function(sig){\r\n      if (labelColors[sig]){\r\n        colors.push(labelColors[sig])\r\n      }\r\n      else {\r\n        colors.push('rgba(' + Math.floor(Math.random() * 255).toString() + ', ' + Math.floor(Math.random() * 255).toString() + ', ' + Math.floor(Math.random() * 255).toString() + ')')\r\n      }\r\n    })\r\n    return colors;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Doughnut data={this.state} key={this.props} options={{ legend: { position: 'right', labels: { fontColor: '#ece6e1' }}}} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default KeyDoughnut;\r\n","import { Scatter } from \"react-chartjs-2\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst axisRanges = {\r\n  \"acousticness\": {\r\n    suggestedMin: 0,\r\n    suggestedMax: 1\r\n  },\r\n  \"danceability\": {\r\n    suggestedMin: 0,\r\n    suggestedMax: 1\r\n  },\r\n  \"energy\": {\r\n    suggestedMin: 0,\r\n    suggestedMax: 1\r\n  },\r\n  \"instrumentalness\": {\r\n    suggestedMin: 0,\r\n    suggestedMax: 1\r\n  },\r\n  \"liveness\": {\r\n    suggestedMin: 0,\r\n    suggestedMax: 1\r\n  },\r\n  \"loudness\": {\r\n    suggestedMin: -60,\r\n    suggestedMax: 0\r\n  },\r\n  \"speechiness\": {\r\n    suggestedMin: 0,\r\n    suggestedMax: 1\r\n  },\r\n  \"tempo\": {},\r\n  \"valence\": {\r\n    suggestedMin: 0,\r\n    suggestedMax: 1\r\n  }\r\n}\r\n\r\nclass CustomGraph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      datasets: [{\r\n        data: this.props.customX.map((x, idx) => (\r\n          {\r\n            x: x || 0,\r\n            y: this.props.customY[idx] || 0\r\n          }\r\n        ))\r\n      }]\r\n    }\r\n  }\r\n\r\n  getState(){\r\n    return({\r\n      label: 'Custom Graph',\r\n      datasets: [{\r\n        data: this.props.customX.map((x, idx) => (\r\n          {\r\n            x: x || 0,\r\n            y: this.props.customY[idx] || 0\r\n          }\r\n        ))\r\n      }]\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps){\r\n      this.setState(this.getState())\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Scatter\r\n        data={this.state}\r\n        options={{\r\n          scales: {\r\n            xAxes: [{\r\n              ticks: {\r\n                fontColor: '#ece6e1',\r\n                ...axisRanges[this.props.xLabel]\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: this.props.xLabel || '',\r\n                fontColor: '#ece6e1'\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              ticks: {\r\n                fontColor: '#ece6e1'\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: this.props.yLabel || '',\r\n                fontColor: '#ece6e1'\r\n              }\r\n            }],\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          elements: {\r\n            point: {\r\n              backgroundColor: '#d66767',\r\n              borderColor: '#ece6e1'\r\n            },\r\n            line: {\r\n              showLine: true\r\n            }\r\n          },\r\n          tooltips: {\r\n            callbacks: {\r\n              label: (context) => this.props.labels[context.index]\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomGraph;","import { Doughnut } from 'react-chartjs-2';\r\nimport React, { Component } from \"react\";\r\n\r\nclass GenreDoughnut extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      labels: Object.keys(this.props.genres),\r\n      datasets: [{\r\n        data: Object.values(this.props.genres),\r\n        backgroundColor: this.getColors(Object.keys(this.props.genres))\r\n      }]\r\n    }\r\n  this.getState = this.getState.bind(this);\r\n  this.getColors = this.getColors.bind(this);\r\n  }\r\n\r\n  getState(){\r\n    return({\r\n      labels: Object.keys(this.props.genres),\r\n      datasets: [{\r\n        data: Object.values(this.props.genres),\r\n        backgroundColor: this.getColors(Object.keys(this.props.genres))\r\n      }]\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps){\r\n      this.setState(this.getState())\r\n    }\r\n  }\r\n\r\n  getColors(genres) {\r\n    let colors = []\r\n    genres.forEach(() => {\r\n      colors.push('rgba(' + Math.floor(Math.random() * 255).toString() + ', ' + Math.floor(Math.random() * 255).toString() + ', ' + Math.floor(Math.random() * 255).toString() + ')')\r\n    })\r\n    return colors;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Doughnut\r\n        data={this.state}\r\n        key={this.props}\r\n        options={{ legend: { position: 'right', labels: { fontColor: '#ece6e1' }}}}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default GenreDoughnut;","import React, { Component } from \"react\";\r\nimport * as calls from './Calls.js';\r\nimport * as stats from './Stats.js';\r\nimport ModeDoughnut from './charts/ModeDoughnut.js';\r\nimport TimeSigDoughnut from './charts/TimeSigDoughnut.js';\r\nimport KeyDoughnut from './charts/KeyDoughnut.js';\r\nimport CustomGraph from './charts/CustomGraph.js';\r\nimport GenreDoughnut from './charts/GenreDoughnut';\r\nimport { KEYNAMES } from \"./charts/KeyDoughnut.js\";\r\n\r\nclass StatsOutput extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      track_objects: [],\r\n      track_features: [],\r\n      stats: null,\r\n      genres: [],\r\n      startup: true,\r\n      customX: null,\r\n      customY: null,\r\n      collapseCustom: true,\r\n    }\r\n    this.storeTrackObjects = this.storeTrackObjects.bind(this);\r\n    this.storeTrackFeatures = this.storeTrackFeatures.bind(this);\r\n    this.storeStats = this.storeStats.bind(this);\r\n    this.storeGenres= this.storeGenres.bind(this);\r\n    this.getModeString = this.getModeString.bind(this);\r\n    this.getGenreString = this.getGenreString.bind(this);\r\n    this.getTimeSigString = this.getTimeSigString.bind(this)\r\n    this.getCustomTitle= this.getCustomTitle.bind(this)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.bleh !== prevProps.bleh){\r\n      calls.getObjects(this.props.token, this.props.bleh, this.storeTrackObjects)\r\n    }\r\n  }\r\n\r\n  storeTrackObjects(tracks){\r\n    this.setState({\r\n      track_objects: tracks\r\n    })\r\n    this.storeGenres();\r\n    calls.getFeatures(this.props.token, this.state.track_objects, this.storeTrackFeatures)\r\n  }\r\n\r\n  storeTrackFeatures(features){\r\n    this.setState({\r\n      track_features: features\r\n    })\r\n    this.storeStats();\r\n  }\r\n\r\n  storeStats(){\r\n    this.setState({\r\n      stats: stats.iterate(this.state),\r\n      startup: false\r\n    })\r\n  }\r\n\r\n  storeGenres() {\r\n    const genres = []\r\n    const artists = this.state.track_objects.items.map((t) => t.track.artists[0])\r\n    artists.map(artist => calls.getArtistGenres(this.props.token, artist.href, (newGenres) => genres.push(newGenres)))\r\n    this.setState({\r\n      genres: genres\r\n    })\r\n  }\r\n\r\n  getModeString() {\r\n    let result = \"\"\r\n    if (this.state.stats.major === this.state.stats.minor) {\r\n      result += \"equally major and minor \"\r\n    }\r\n    else if (this.state.stats.major > this.state.stats.minor) {\r\n      result += \"mostly major \"\r\n    }\r\n    else {\r\n      result += \"mostly minor \"\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getTimeSigString() {\r\n    let result = \"[\"\r\n    this.state.stats.timeSigs.forEach(function(sig){\r\n      result += sig.toString()\r\n      result += \", \"\r\n    })\r\n    result = result.slice(0, -2)\r\n    result += \"]\"\r\n    return result;\r\n  }\r\n\r\n  getKeyString() {\r\n    let result = \"[\"\r\n    Object.keys(this.state.stats.keyCount).forEach(function(key){\r\n      result += KEYNAMES[key].toString()\r\n      result += \", \"\r\n    })\r\n    result = result.slice(0, -2)\r\n    result += \"]\"\r\n    return result;\r\n  }\r\n\r\n  getGenreString() {\r\n    let result = \"\";\r\n    Object.keys(this.state.stats.genres).forEach((genre) => {\r\n      result += genre\r\n      result += \", \"\r\n    });\r\n    return result.slice(0, -2)\r\n  }\r\n\r\n  getCustomTitle() {\r\n    const {customX, customY} = this.state;\r\n    if (!customX && !customY) return \"Custom Chart\";\r\n    return `${customX ? customX[0].toUpperCase() + customX.slice(1) : ''}${(customX && customY) ? ' vs. ' : ''}${customY ? customY[0].toUpperCase() + customY.slice(1) : ''}`;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"statsOutput\">\r\n        {!this.state.stats ?\r\n          <h3 id=\"select\">{!!this.state.startup ? \"< select a playlist to begin\" : `${this.props.name} is empty :(`}</h3>\r\n          : <div id=\"infoContainer\">\r\n              <div id=\"header\">\r\n                <h3>{this.props.name}</h3>\r\n              </div>\r\n              <div id=\"statsContainer\">\r\n                <div id=\"graphContainer\">\r\n                  <div className=\"graphBlock\">\r\n                    <p className=\"chartLabel\">This playlist is <span className=\"bold\">{this.getModeString()}</span> with <span className=\"bold\">{this.state.stats.major} major song{this.state.stats.major !== 1 && \"s\"}</span> and <span className=\"bold\">{this.state.track_objects.items.length - this.state.stats.major} minor song{this.state.track_objects.items.length - this.state.stats.major !== 1 && \"s\"}</span>.</p>\r\n                    <ModeDoughnut id={this.props.bleh} major={this.state.stats.major} minor={this.state.stats.minor}/>\r\n                  </div>\r\n                  <div className=\"graphBlock\">\r\n                    <p className=\"chartLabel\">This playlist has songs in the following <span className=\"under\">time signatures</span>: <span className=\"bold\">{this.getTimeSigString()}</span>.</p>\r\n                    <TimeSigDoughnut id={this.props.bleh} sigCount={this.state.stats.sigCount}/>\r\n                  </div>\r\n                  <div className=\"graphBlock full\">\r\n                    <p className=\"chartLabel\">This playlist has songs in the following <span className=\"under\">keys</span>: <span className=\"bold\">{this.getKeyString()}</span></p>\r\n                    <KeyDoughnut sigCount={this.state.stats.sigCount} id={this.props.bleh} data={this.state.stats.keyCount}/>\r\n                  </div>\r\n                  <div className=\"graphBlock full\">\r\n                    <p className=\"chartLabel\">This playlist has artists associated with the following <span className=\"under\">genres</span>: <span className=\"bold\">{this.getGenreString()}</span></p>\r\n                    <GenreDoughnut genres={this.state.stats.genres} />\r\n                  </div>\r\n                  <div className=\"graphBlock\">\r\n                    <p className=\"stat\">The average song duration is <span className=\"bold\">{this.state.stats.avgDurationMin} minutes and {this.state.stats.avgDurationSec} seconds.</span></p>\r\n                    <p className=\"stat\">This playlist has an average <span className=\"under\">popularity</span> of <span className=\"bold\">{this.state.stats.avgPopularity}</span>, with the most popular song being <span className=\"bold\">\"{this.state.stats.mostPopular}\" by {this.state.stats.mostPopularArtist}</span> and the least popular song being <span className=\"bold\">\"{this.state.stats.leastPopular}\" by {this.state.stats.leastPopularArtist}</span>.</p>\r\n                    <p hidden className=\"explanation\">\"The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.\"</p>\r\n                    <p className=\"stat\">This playlist has an average <span className=\"under\">valence</span> of <span className=\"bold\">{this.state.stats.avgValence}</span>.</p>\r\n                    <p hidden className=\"explanation\">\tValence is \"a measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\"</p>\r\n                  </div>\r\n                  <div className=\"graphBlock full\">\r\n                    <p className=\"chartLabel\">{this.getCustomTitle()}</p>\r\n                    <div style={{ margin: '0 auto', width: '20rem', marginBottom: '0.5rem' }}>\r\n                      <select value={this.state.customX} style={{ width: '10rem' }} onChange={(e) => this.setState({ customX: e.target.value })}>\r\n                        <option value=''>none</option>\r\n                        <option value=\"acousticness\">acousticness</option>\r\n                        <option value=\"danceability\">danceability</option>\r\n                        <option value=\"energy\">energy</option>\r\n                        <option value=\"instrumentalness\">instrumentalness</option>\r\n                        <option value=\"liveness\">liveness</option>\r\n                        <option value=\"loudness\">loudness</option>\r\n                        <option value=\"speechiness\">speechiness</option>\r\n                        <option value=\"tempo\">tempo</option>\r\n                        <option value=\"valence\">valence</option>\r\n                      </select>\r\n                      <select value={this.state.customY} style={{ width: '10rem' }} onChange={(e) => this.setState({ customY: e.target.value })}>\r\n                        <option value=''>none</option>\r\n                        <option value=\"acousticness\">acousticness</option>\r\n                        <option value=\"danceability\">danceability</option>\r\n                        <option value=\"energy\">energy</option>\r\n                        <option value=\"instrumentalness\">instrumentalness</option>\r\n                        <option value=\"liveness\">liveness</option>\r\n                        <option value=\"loudness\">loudness</option>\r\n                        <option value=\"speechiness\">speechiness</option>\r\n                        <option value=\"tempo\">tempo</option>\r\n                        <option value=\"valence\">valence</option>\r\n                      </select>\r\n                    </div>\r\n                    <CustomGraph id={this.props.bleh} customX={this.state.track_features.audio_features.map((i) => i && i[this.state.customX])} customY={this.state.track_features.audio_features.map((i) => i && i[this.state.customY])} labels={this.state.track_objects.items.map((i) => `${i.track.name} - ${i.track.artists[0].name}`)} xLabel={this.state.customX} yLabel={this.state.customY} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StatsOutput;","import React, { Component } from \"react\";\r\nimport StatsOutput from \"./StatsOutput.js\"\r\n\r\nclass PlaylistSidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: null,\r\n      token: this.props.token,\r\n      no_data: false,\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(id, name) {\r\n    this.setState({\r\n      selected: id,\r\n      name: name\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { previous, onPrevious, next, onNext, pageNum } = this.props;\r\n    return (\r\n      <div id=\"hasToken\">\r\n        <div className=\"sidebar\">\r\n          <h2>playlistats</h2>\r\n          <ul>\r\n            <li onClick={() => this.handleClick(0, \"Recently Played\")} key={0}>Recently Played</li>\r\n            {Array.from(this.props.playlists).map( i => (\r\n            <li onClick={() => this.handleClick(i.id, i.name)} className=\"playlist_item\" key={i.id}>{i.name}</li>\r\n            ))}\r\n          </ul>\r\n          <div id=\"footer\">\r\n            <p id=\"pageCount\">page {pageNum}</p>\r\n            <div id=\"pagination\">\r\n              <a className={`pagBtn${previous ? ' active' : ''}`} onClick={onPrevious}>{'<'} previous</a>\r\n              <a className={`pagBtn${next ? ' active' : ''}`} onClick={onNext}>next {'>'}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <StatsOutput token={this.state.token} name={this.state.name} bleh={this.state.selected}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlaylistSidebar;","const hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\n\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;","import React, { Component } from 'react';\r\nimport PlaylistSidebar from \"./PlaylistSidebar\"\r\nimport hash from \"./hash\";\r\nimport './App.css';\r\nimport * as calls from \"./Calls.js\"\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst clientId = \"308136625304484d92879d69e98ccd89\";\r\n\r\nexport const PAGE_SIZE = 50;\r\n\r\nconst redirectUri = \"http://leesgrey.github.io/playlistats\";\r\n\r\nconst scopes = [\r\n  \"user-read-recently-played\",\r\n  \"playlist-read-collaborative\",\r\n  \"playlist-read-private\"\r\n]\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      token: null,\r\n      playlists: [],\r\n      previous: null,\r\n      next: null,\r\n      no_data: false,\r\n      pageNum: 0\r\n    }\r\n    this.setPlaylists = this.setPlaylists.bind(this);\r\n    this.onPrevious= this.onPrevious.bind(this);\r\n    this.onNext= this.onNext.bind(this);\r\n  }\r\n\r\n  setPlaylists(data, previous, next) {\r\n    this.setState({\r\n      playlists: data,\r\n      previous: previous,\r\n      next: next\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    let _token = hash.access_token;\r\n    if (_token) {\r\n      this.setState({\r\n        token: _token\r\n      });\r\n    calls.getPlaylists(_token, this.setPlaylists, PAGE_SIZE * this.state.pageNum);\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    this.setState((prevState) => {\r\n      calls.getPlaylists(hash.access_token, this.setPlaylists, this.state.next);\r\n\r\n      return { pageNum: prevState.pageNum + 1 }\r\n    })\r\n  }\r\n\r\n  onPrevious() {\r\n    this.setState((prevState) => {\r\n      calls.getPlaylists(hash.access_token, this.setPlaylists, this.state.previous);\r\n\r\n      return { pageNum: prevState.pageNum - 1 }\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {this.state.token ? \r\n            <div id=\"loginDisplay\">\r\n              <PlaylistSidebar\r\n                token={this.state.token}\r\n                playlists={this.state.playlists}\r\n                next={this.state.next}\r\n                previous={this.state.previous}\r\n                onNext={this.onNext}\r\n                onPrevious={this.onPrevious}\r\n                pageNum={this.state.pageNum + 1}\r\n              />\r\n            </div> :\r\n            <div id=\"landing\">\r\n              <h1>playlistats</h1>\r\n              <p>generate spotify playlist statistics (and some more features eventually maybe)</p>\r\n              <a\r\n                className=\"btn btn--loginApp-link\"\r\n                href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\r\n                >\r\n                log into spotify\r\n              </a>\r\n            </div>\r\n          }\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}